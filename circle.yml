machine:
  environment:
    GODIST: "go1.9.1.linux-amd64.tar.gz"
    IMPORT_PATH: "$(echo $GOPATH | sed 's/:.*$//g')/src/github.com/$CIRCLE_PROJECT_USERNAME"
    APP_PATH: "$IMPORT_PATH/$CIRCLE_PROJECT_REPONAME"
  post:
    - mkdir -p downloads
    - test -e downloads/$GODIST || curl -o downloads/$GODIST https://storage.googleapis.com/golang/$GODIST
    - sudo rm -rf /usr/local/go
    - sudo tar -C /usr/local -xzf downloads/$GODIST
dependencies:
  override:
    - sudo add-apt-repository ppa:masterminds/glide -y
    - sudo apt-get update
    - sudo apt-get install glide -y
test:
  pre:
    - go version
    - mkdir -p "$IMPORT_PATH"
    - ln -sf "$(pwd)" "$APP_PATH"
    - go get -u github.com/jteeuwen/go-bindata/...
    - go get -u github.com/golang/lint/golint
    - cd "$APP_PATH" glide install
  override:
    - cd "$APP_PATH" go vet $(glide novendor)
    - cd "$APP_PATH" && test -z "$(golint  $(glide novendor) | tee /dev/stderr)"
    - cd "$APP_PATH" && go generate
    - cd "$APP_PATH" && go test -v $(glide novendor)

deployment:
  release:
    tag: /v[0-9]+\.[0-9]+\.[0-9]+/
    commands:
      - docker run -e GITHUB_TOKEN=${GITHUB_TOKEN} -e CIRCLE_PROJECT_REPONAME=${CIRCLE_PROJECT_REPONAME} -e GITHUB_API=${GITHUB_API} -v $(pwd):/go/src/git.dmm.com/dre/pigeon golang:1.8.3 sh -ex /go/src/git.dmm.com/dre/pigeon/sh/release_github.sh
      - go get -v github.com/aktau/github-release
      - sh sh/build.sh
      - github-release upload --user sre --repo ${CIRCLE_PROJECT_REPONAME} --tag $(git describe --tags | perl -anlE 'm/\A([^\-]+)-?/; print $1') --name hostvars-batch --file hostvars-batch -R
